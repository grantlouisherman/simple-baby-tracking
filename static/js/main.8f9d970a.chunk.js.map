{"version":3,"sources":["Components/Button.jsx","Components/TimeSeries.jsx","Components/firebaseconnection.jsx","App.js","index.js"],"names":["Button","props","react_default","a","createElement","type","class","id","concat","name","onClick","databaseRef","timeRef","child","String","Date","set","poop-diaper","wet-diaper","fed","onClickMethond","firebaseRef","data","poop","pv","amt","es6","width","height","margin","top","right","left","bottom","strokeDasharray","dataKey","stroke","activeDot","r","PureComponent","jsfiddleUrl","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ref","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","transformData","obj","output","keys","forEach","key","push","time","state","firebaseLoaded","firebaseData","_this2","on","snapshot","setState","val","errorObject","console","log","code","className","Components_Button","map","JSON","stringify","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.8f9d970a.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\n\nconst Button = (props) => {\n  const onClickMethond = (type, databaseRef) => { \n    var timeRef = databaseRef.child(String(new Date()));\n    switch(type){\n      case 'poop-diaper':\n          timeRef.set({ 'poop-diaper': 1 })\n          break;\n      case 'wet-diaper':\n          timeRef.set({ 'wet-diaper': 1 })\n          break;\n      case 'fed':\n          timeRef.set({ 'fed': 1 })\n          break;\n      default:\n        break\n    }\n    \n  }\n  return ( \n    <button \n    type=\"button\"\n    class=\"btn btn-lg btn-primary\"\n    id={`${props.name}`}\n    onClick={() => { onClickMethond(props.name, props.firebaseRef) }}\n    >\n      {props.name}\n    </button>\n  )\n}\n\n\n\nexport default Button","import React, { PureComponent } from 'react';\nimport {\n  LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n} from 'recharts';\n\nconst data = [\n  {\n    name: 'Page A', poop : 4000, pv: 2400, amt: 2400,\n  },\n  {\n    name: 'Page B',  pv: 1398, amt: 2210,\n  },\n  {\n    name: 'Page C', poop: 2000, pv: 9800, amt: 2290,\n  },\n  {\n    name: 'Page D', poop: 2780, pv: 3908, amt: 2000,\n  },\n  {\n    name: 'Page E', poop: 1890, pv: 4800, amt: 2181,\n  },\n  {\n    name: 'Page F',  pv: 3800, amt: 2500,\n  },\n  {\n    name: 'Page G', poop: 3490, pv: 4300, amt: 2100,\n  },\n];\n\nexport default class Example extends PureComponent {\n  static jsfiddleUrl = 'https://jsfiddle.net/alidingling/xqjtetw0/';\n\n  render() {\n    return (\n      <LineChart\n        width={500}\n        height={300}\n        data={data}\n        margin={{\n          top: 5, right: 30, left: 20, bottom: 5,\n        }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"name\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line type=\"monotone\" dataKey=\"poop\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        <Line type=\"monotone\" dataKey=\"wet\" stroke=\"#82ca9d\" />\n      </LineChart>\n    );\n  }\n}\n","import * as firebase from 'firebase';\nvar config = {\n    apiKey: \"AIzaSyAc7uNDEHsEQlAM8D1-ybuhiVRsR69DTRM\",\n    authDomain: \"amready-171619.firebaseapp.com\",\n    databaseURL: \"https://amready-171619.firebaseio.com\",\n    projectId: \"amready-171619\",\n    storageBucket: \"amready-171619.appspot.com\",\n    messagingSenderId: \"276606987301\",\n    appId: \"1:276606987301:web:518f01630ac1d9a1\"\n  };\nfirebase.initializeApp(config);\n\nexport const databaseRef = firebase.database().ref();","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './Components/Button'\nimport TimeSeries  from './Components/TimeSeries'\nimport { databaseRef } from './Components/firebaseconnection'\n\n class  App extends  Component {\n   constructor(){\n     super()\n     this.state = {\n       firebaseLoaded: false,\n       firebaseData: []\n     }\n   }\n   transformData = obj => {\n     const output = []\n    Object.keys(obj).forEach(key => {\n      output.push({time:key, data: obj[key]})\n    })\n    return output\n   }\n   componentDidMount(){\n    databaseRef.on(\"value\", (snapshot) => {\n      this.setState({firebaseLoaded: true, firebaseData: this.transformData(snapshot.val()) })\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n   }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Button name='poop-diaper' firebaseRef={databaseRef}/>\n        <Button name='wet-diaper' firebaseRef={databaseRef} />\n        <Button name='fed' firebaseRef={databaseRef} />\n        <ul>\n        {\n          this.state.firebaseLoaded ? \n          this.state.firebaseData.map(data => <li>{JSON.stringify( data, null, 4) }</li>)\n          : null\n        }\n        </ul>\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}