{"version":3,"sources":["Components/Button.jsx","Components/CountCard.jsx","Components/DailyCounts.jsx","Components/firebaseconnection.jsx","App.js","index.js"],"names":["Button","props","react_default","a","createElement","type","class","id","concat","name","onClick","databaseRef","timeRef","child","String","Date","set","poop-diaper","wet-diaper","fed","onClickMethond","firebaseRef","CountCard","console","log","date","wets","poops","feeds","DailyCounts","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nameConverter","dailyCounts","fireBaseData","timeTable","keys","forEach","key","currentDay","getDate","currentMonth","getMonth","valueToUpdate","dateKey","state","loadTimeTable","setState","data","_this2","map","Components_CountCard","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ref","App","transformData","obj","output","todaysDate","push","time","firebaseLoaded","firebaseData","countsData","on","snapshot","val","errorObject","code","className","Components_Button","JSON","stringify","Components_DailyCounts","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7c012a2d.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\n\nconst Button = (props) => {\n  const onClickMethond = (type, databaseRef) => { \n    var timeRef = databaseRef.child(String(new Date()));\n    switch(type){\n      case 'poop-diaper':\n          timeRef.set({ 'poop-diaper': 1 })\n          break;\n      case 'wet-diaper':\n          timeRef.set({ 'wet-diaper': 1 })\n          break;\n      case 'fed':\n          timeRef.set({ 'fed': 1 })\n          break;\n      default:\n        break\n    }\n    \n  }\n  return ( \n    <button \n    type=\"button\"\n    class=\"btn btn-lg btn-primary\"\n    id={`${props.name}`}\n    onClick={() => { onClickMethond(props.name, props.firebaseRef) }}\n    >\n      {props.name}\n    </button>\n  )\n}\n\n\n\nexport default Button","import React from 'react'\n\nconst CountCard = props => {\n    console.log(props)\n    return (\n        <div class=\"card\">\n        <div class=\"card-body\">\n            <h2>Date</h2>\n            <h5 class=\"card-title\">{props.date}</h5>\n            <h4>Wet Diapers</h4>\n            <p class=\"card-text\">{props.wets}</p>\n            <h4>Poop Diapers</h4>\n            <p class=\"card-text\">{props.poops}</p>\n            <h4># of Feeds</h4>\n            <p class=\"card-text\">{props.feeds}</p>\n        </div>\n        </div>\n    )\n}\n\n\n\nexport default CountCard","import React, { Component } from 'react';\nimport CountCard from './CountCard'\n\nclass DailyCounts extends Component {\n    constructor(){\n        super()\n        this.state = {\n            timeTable: [],\n            loadTimeTable: false\n        }\n    }\n    nameConverter = name => {\n        return {\n            \"wet-diaper\": \"wets\",\n            \"fed\": \"feeds\",\n            \"poop-diaper\": \"poops\"\n        }[name]\n    }\n    dailyCounts = fireBaseData => {\n        const timeTable = {}\n        Object.keys(fireBaseData).forEach(key => {\n            const currentDay = new Date(key).getDate()\n            const currentMonth = new Date(key).getMonth()+1\n            const valueToUpdate = Object.keys(fireBaseData[key])[0]\n            const dateKey = `${currentMonth}-${currentDay}`\n            if(!timeTable[dateKey]) {\n                timeTable[dateKey] = {\n                    wets:0,\n                    poops: 0,\n                    feeds: 0\n                }\n                console.log(fireBaseData[key])\n                timeTable[dateKey][this.nameConverter(valueToUpdate)] =\n                timeTable[dateKey][this.nameConverter(valueToUpdate)] + 1\n            }else{\n                timeTable[dateKey][this.nameConverter(valueToUpdate)] =\n                timeTable[dateKey][this.nameConverter(valueToUpdate)] + 1\n            }\n          })\n          return timeTable\n    }\n\n  \n    componentWillMount(){\n        this.setState({timeTable: this.dailyCounts(this.props.data), loadTimeTable: true})\n    }\n    render() {\n        return (\n            <div>\n                {\n                    this.state.loadTimeTable ? \n                    Object.keys(this.state.timeTable).map(key =>(\n                        <CountCard \n                        date={key}\n                        wets={this.state.timeTable[key].wets}\n                        poops={this.state.timeTable[key].poops}\n                        feeds={this.state.timeTable[key].feeds}\n                        />\n                    ))\n                    :\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default DailyCounts","import * as firebase from 'firebase';\nvar config = {\n    apiKey: \"AIzaSyAc7uNDEHsEQlAM8D1-ybuhiVRsR69DTRM\",\n    authDomain: \"amready-171619.firebaseapp.com\",\n    databaseURL: \"https://amready-171619.firebaseio.com\",\n    projectId: \"amready-171619\",\n    storageBucket: \"amready-171619.appspot.com\",\n    messagingSenderId: \"276606987301\",\n    appId: \"1:276606987301:web:518f01630ac1d9a1\"\n  };\nfirebase.initializeApp(config);\n\nexport const databaseRef = firebase.database().ref();","import React, { Component } from 'react';\nimport './App.css';\nimport Button from './Components/Button'\nimport DailyCounts from './Components/DailyCounts'\n\nimport { databaseRef } from './Components/firebaseconnection'\n\n class  App extends  Component {\n   constructor(){\n     super()\n     this.state = {\n       firebaseLoaded: false,\n       firebaseData: [],\n       countsData: {}\n     }\n   }\n   transformData = obj => {\n     const output = []\n     let todaysDate = new Date ()\n     todaysDate = todaysDate.getDate()\n    Object.keys(obj).forEach(key => {\n      if(new Date(key).getDate() === todaysDate ) {\n        output.push({time:key, data: obj[key]})\n      }\n    })\n    return output\n   }\n   componentDidMount(){\n    databaseRef.on(\"value\", (snapshot) => {\n      this.setState({firebaseLoaded: true, firebaseData: this.transformData(snapshot.val()), countsData:snapshot.val() })\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n   }\n\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Button name='poop-diaper' firebaseRef={databaseRef}/>\n        <Button name='wet-diaper' firebaseRef={databaseRef} />\n        <Button name='fed' firebaseRef={databaseRef} />\n        <ul>\n        {\n          this.state.firebaseLoaded ? \n          this.state.firebaseData.map(data => <li>{JSON.stringify( data, null, 4) }</li>)\n          : null\n        }\n        </ul>\n        {\n          this.state.firebaseLoaded ? \n          <DailyCounts data={this.state.countsData} />\n          : null\n        }\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}